// Importa fun√ß√µes e vari√°veis comuns usadas pelo bot
import { callGroqAPI, userSession, updateHistory } from "./config.js";

/*
==========================================================
üßë‚Äçüíª BOT ASSISTENTE DO SISTEMA DA TECH SORRISOS
‚Üí Especialista em suporte ao sistema online da cl√≠nica.
‚Üí Ajuda usu√°rios a navegar, agendar, cancelar, visualizar e usar funcionalidades do site.
‚Üí Responde s√≥ dentro do escopo do sistema.
‚Üí Mant√©m conversa amig√°vel, clara e objetiva.
==========================================================
*/

// üß† Mem√≥ria local do assistente, com as principais funcionalidades e instru√ß√µes
const memoriaSistema = {
  funcionalidades: [
    "Agendar consultas na aba 'Agendamentos'",
    "Visualizar seus hor√°rios futuros e hist√≥ricos",
    "Cancelar ou remarcar consultas pelo portal",
    "Avaliar atendimento ap√≥s cada consulta realizada",
    "Receber lembretes autom√°ticos via e-mail ou SMS",
  ],
  instrucoesBasicas: `
- Para agendar uma consulta, acesse a aba "Agendamentos", escolha o dentista e o hor√°rio desejado.
- Para remarcar ou cancelar, v√° ao seu hist√≥rico de consultas e selecione a op√ß√£o desejada.
- Voc√™ pode atualizar seus dados pessoais na se√ß√£o "Perfil".
- Se encontrar algum erro no sistema, descreva o problema com detalhes para que possamos ajudar.
`,
};

// üí¨ Mensagem inicial enviada ao usu√°rio ao iniciar a conversa com o assistente
function mensagemInicial() {
  return `Ol√°! Eu sou o assistente virtual do sistema da Tech Sorrisos.

Estou aqui para te ajudar a usar nosso sistema online, tirar d√∫vidas sobre funcionalidades, agendamento e muito mais.

Voc√™ pode me perguntar sobre:
- Como agendar, remarcar ou cancelar consultas
- Visualizar seus hor√°rios e hist√≥rico de atendimentos
- Atualizar seus dados pessoais no sistema
- Receber informa√ß√µes sobre notifica√ß√µes e lembretes

Como posso ajudar voc√™ hoje?`;
}

// üîç Fun√ß√£o que detecta se a mensagem √© um comando de in√≠cio para resetar ou iniciar conversa
function isComandoInicio(texto) {
  const t = texto.trim().toLowerCase();
  return t === "/start" || t === "inicio" || t === "in√≠cio";
}

// ‚õî Fun√ß√£o que verifica se a mensagem do usu√°rio est√° fora do escopo do sistema da cl√≠nica
function foraDoEscopo(texto) {
  // Lista de palavras-chave que indicam que a pergunta n√£o √© sobre o sistema
  const palavrasProibidas = [
    "clima", "tempo", "pol√≠tica", "presidente", "futebol", 
    "piada", "filme", "m√∫sica", "not√≠cia", "noticias"
  ];
  // Verifica se alguma das palavras proibidas est√° na mensagem do usu√°rio
  return palavrasProibidas.some((p) => texto.toLowerCase().includes(p));
}

// ‚öôÔ∏è Gera o "system prompt" com as regras e contexto para a IA responder corretamente
function gerarSystemPrompt() {
  // Monta o texto com as informa√ß√µes atuais da mem√≥ria para dar contexto para a IA
  return `
Voc√™ √© o assistente virtual especializado no sistema online da cl√≠nica Tech Sorrisos.
Seu papel √© ajudar os usu√°rios a usar as funcionalidades do sistema, explicando processos, tirando d√∫vidas t√©cnicas e orientando passo a passo.
Seja sempre claro, amig√°vel, did√°tico e objetivo.
NUNCA responda perguntas fora do contexto do sistema da cl√≠nica. Caso receba algo fora do tema, responda educadamente que s√≥ pode ajudar sobre o sistema.

Principais funcionalidades do sistema:
${memoriaSistema.funcionalidades.map((f) => "- " + f).join("\n")}

Instru√ß√µes b√°sicas para uso:
${memoriaSistema.instrucoesBasicas}
`.trim();
}

// üí¨ Fun√ß√£o principal que processa a mensagem do usu√°rio e retorna a resposta do assistente
export async function responderComoAssistente(mensagemUsuario) {
  // Se for a primeira mensagem (hist√≥rico vazio) ou comando de in√≠cio, responde com a mensagem inicial
  if (!userSession.history.length || isComandoInicio(mensagemUsuario)) {
    const msg = mensagemInicial();
    updateHistory("assistant", msg); // Salva a mensagem no hist√≥rico da conversa
    return msg;
  }

  // Se a mensagem estiver fora do escopo do sistema, informa ao usu√°rio educadamente
  if (foraDoEscopo(mensagemUsuario)) {
    const aviso = "Desculpe, sou especializado apenas em suporte ao sistema da cl√≠nica Tech Sorrisos. Como posso ajudar dentro desse contexto?";
    updateHistory("assistant", aviso); // Salva o aviso no hist√≥rico
    return aviso;
  }

  // Atualiza o hist√≥rico da conversa com a mensagem do usu√°rio para manter contexto
  updateHistory("user", mensagemUsuario);

  // Gera o system prompt que ser√° enviado para a API junto com o hist√≥rico
  const systemPrompt = gerarSystemPrompt();

  // Chama a API Groq para gerar a resposta com base no hist√≥rico e contexto
  const resposta = await callGroqAPI(userSession.history, systemPrompt);

  // Atualiza o hist√≥rico da conversa com a resposta do assistente
  updateHistory("assistant", resposta);

  // Retorna a resposta para o front-end exibir ao usu√°rio
  return resposta;
}
