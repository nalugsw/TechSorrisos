// Importa fun√ß√µes e vari√°veis comuns para comunica√ß√£o com a API e hist√≥rico
import { callGroqAPI, userSession, updateHistory } from "./config.js";

/*
==========================================================
ü¶∑ BOT DENTISTA VIRTUAL DA TECH SORRISOS
‚Üí Atua como dentista profissional, t√©cnico e acolhedor.
‚Üí Responde d√∫vidas sobre sintomas, tratamentos, procedimentos, cuidados.
‚Üí Usa linguagem clara, did√°tica, emp√°tica e objetiva.
‚Üí Nunca responde fora do escopo odontol√≥gico da cl√≠nica.
==========================================================
*/

// üß† Mem√≥ria interna com especialidades, orienta√ß√µes e sintomas comuns
const memoriaDentista = {
  especialidades: ["Ortodontia", "Endodontia", "Periodontia", "Implantes"],
  orientacoesPadrao: [
    "Evite alimentos duros ou muito quentes ap√≥s procedimentos.",
    "Escove os dentes pelo menos 3 vezes ao dia com escova macia.",
    "Use fio dental diariamente para prevenir inflama√ß√µes.",
  ],
  sintomasComuns: {
    "dor de dente": "Pode indicar c√°rie ou inflama√ß√£o no nervo. Recomendo avalia√ß√£o com raio-X.",
    sensibilidade: "Poss√≠vel retra√ß√£o gengival ou desgaste do esmalte dental.",
    sangramento: "Pode ser sinal de gengivite. Agende uma limpeza profissional.",
    "mau h√°lito": "Pode estar relacionado a higiene inadequada ou problemas na l√≠ngua.",
  },
};

// üí¨ Mensagem inicial enviada ao usu√°rio para iniciar intera√ß√£o
function mensagemInicial() {
  return `Ol√°! Eu sou o dentista virtual da cl√≠nica Tech Sorrisos.

Estou aqui para ajudar com d√∫vidas sobre tratamentos odontol√≥gicos, sintomas, cuidados e procedimentos.

Voc√™ pode me perguntar sobre:
- Tipos de tratamentos e especialidades
- Como cuidar dos dentes antes e depois dos procedimentos
- Sintomas comuns e quando procurar atendimento
- Esclarecimentos sobre exames e avalia√ß√µes

Como posso ajudar voc√™ hoje?`;
}

// üîç Fun√ß√£o para detectar comandos de in√≠cio (/start, in√≠cio)
function isComandoInicio(texto) {
  const t = texto.trim().toLowerCase();
  return t === "/start" || t === "inicio" || t === "in√≠cio";
}

// ‚õî Fun√ß√£o que verifica se a mensagem est√° fora do escopo odontol√≥gico
function foraDoEscopo(texto) {
  const palavrasProibidas = [
    "clima", "pol√≠tica", "futebol", "piada", "filme", "m√∫sica", "not√≠cia",
  ];
  return palavrasProibidas.some((p) => texto.toLowerCase().includes(p));
}

// ‚öôÔ∏è Cria o prompt para a IA baseado nas orienta√ß√µes e contexto do dentista
function gerarSystemPrompt() {
  return `
Voc√™ √© um dentista virtual da cl√≠nica Tech Sorrisos.
Seu papel √© fornecer informa√ß√µes t√©cnicas e orienta√ß√µes claras, did√°ticas e acolhedoras sobre odontologia.
Nunca responda perguntas que n√£o estejam relacionadas a odontologia ou √† cl√≠nica.
Use as seguintes informa√ß√µes para ajudar nas respostas:

Especialidades:
${memoriaDentista.especialidades.join(", ")}

Orienta√ß√µes b√°sicas para pacientes:
${memoriaDentista.orientacoesPadrao.map(o => "- " + o).join("\n")}

Sintomas comuns e suas poss√≠veis causas:
${Object.entries(memoriaDentista.sintomasComuns)
  .map(([sintoma, resposta]) => `- ${sintoma}: ${resposta}`)
  .join("\n")}
`.trim();
}

// üí¨ Fun√ß√£o principal para processar a mensagem e responder como dentista
export async function responderComoDentista(mensagemUsuario) {
  // Responde mensagem inicial se for primeira intera√ß√£o (hist√≥rico vazio) ou comando de in√≠cio
  if (!userSession.history.length || isComandoInicio(mensagemUsuario)) {
    const msg = mensagemInicial();
    updateHistory("assistant", msg);
    return msg;
  }

  // Bloqueia perguntas fora do escopo odontol√≥gico, respondendo educadamente
  if (foraDoEscopo(mensagemUsuario)) {
    const aviso = "Desculpe, posso responder apenas d√∫vidas relacionadas √† odontologia da Tech Sorrisos. Como posso ajudar?";
    updateHistory("assistant", aviso);
    return aviso;
  }

  // Atualiza o hist√≥rico com a pergunta do usu√°rio
  updateHistory("user", mensagemUsuario);

  // Gera o prompt para enviar junto com o hist√≥rico para a API da Groq
  const systemPrompt = gerarSystemPrompt();

  // Chama a API da Groq para obter a resposta do dentista virtual
  const resposta = await callGroqAPI(userSession.history, systemPrompt);

  // Atualiza o hist√≥rico com a resposta gerada
  updateHistory("assistant", resposta);

  // Retorna a resposta para exibi√ß√£o ao usu√°rio
  return resposta;
}
